<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<context:component-scan base-package="org.danielli.xultimate.context.util" />
	
	<context:component-scan base-package="org.danielli.xultimate.crawler" />
	
	<context:property-placeholder location="classpath:crawler.properties" file-encoding="utf-8" />

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig" p:maxActive="500" p:maxIdle="300" p:maxWait="10000" p:testOnBorrow="true" />
	<util:list id="jedisShardInfos">
		<bean class="redis.clients.jedis.JedisShardInfo" c:host="127.0.0.1" c:port="6379" c:timeout="10000" c:weight="1" />
		<!--  <bean class="redis.clients.jedis.JedisShardInfo" c:host="127.0.0.1" c:port="6381" c:timeout="10000" c:weight="1" /> -->
	</util:list>
	<util:constant id="jedisAlgo" static-field="redis.clients.util.Hashing.MURMUR_HASH" />
	<util:constant id="jedisKeyTagPattern" static-field="redis.clients.util.Sharded.DEFAULT_KEY_TAG_PATTERN" />
	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool" c:poolConfig-ref="jedisPoolConfig" c:shards-ref="jedisShardInfos" c:algo-ref="jedisAlgo" c:keyTagPattern-ref="jedisKeyTagPattern" destroy-method="destroy" />	
	<bean id="shardedJedisTemplate" class="org.danielli.xultimate.context.kvStore.redis.jedis.support.ShardedJedisTemplate" p:shardedJedisPool-ref="shardedJedisPool" />
	
	<bean id="threadPoolTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" depends-on="statusChecker"
		p:corePoolSize="${server.threadPool.corePoolSize}" 
		p:queueCapacity="${server.threadPool.queueCapacity}" 
		p:maxPoolSize="${server.threadPool.maxPoolSize}" 
		p:keepAliveSeconds="${server.threadPool.keepAliveSeconds}" 
		p:allowCoreThreadTimeOut="true"
		p:daemon="true" 
		p:threadPriority="5" 
		p:threadNamePrefix="${server.threadPool.threadNamePrefix}" 
		p:awaitTerminationSeconds="10000000" 
		p:waitForTasksToCompleteOnShutdown="true">
		<property name="rejectedExecutionHandler">
			<bean class="java.util.concurrent.ThreadPoolExecutor.AbortPolicy" />
		</property>
	</bean>
	
	<bean id="spelFormatter" class="org.danielli.xultimate.context.format.support.SpelFormatter">
		<property name="expressionParser">
			<bean class="org.springframework.expression.spel.standard.SpelExpressionParser" />
		</property>
	</bean>
	
	<bean id="fastJSONTemplate" class="org.danielli.xultimate.core.json.fastjson.FastJSONTemplate" />
	
	<bean id="requestConfigBuilder" class="org.apache.http.client.config.RequestConfig" factory-method="custom" >
		<property name="connectionRequestTimeout" value="0" />
		<property name="connectTimeout" value="2000" />
		<property name="socketTimeout" value="1500" />
	</bean>

	<bean id="httpClientBuilder" class="org.apache.http.impl.client.HttpClientBuilder" factory-method="create">
		<property name="maxConnTotal" value="128" />
		<property name="maxConnPerRoute" value="3" />
		<property name="defaultRequestConfig">
			<bean factory-bean="requestConfigBuilder" factory-method="build" />
		</property>
	</bean>
	
	<bean id="httpClient" factory-bean="httpClientBuilder" factory-method="build" destroy-method="close" />
	
	<util:list id="messageConverters">
		<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
		<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
		<bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter" />
        <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter" />
    </util:list>
	
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate" p:messageConverters-ref="messageConverters">
        <constructor-arg>
            <bean class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
                <constructor-arg ref="httpClient"/>
            </bean>
        </constructor-arg>
    </bean>
</beans>
